spring:
  datasource:
    url: jdbc:mysql://auth-service-mysql:3306/auth_service_database?createDatabaseIfNotExist=true&serverTimezone=UTC
    username: auth-service-user
    password: '{cipher}e5ea373656b09cb959f93338c5be9fc143ee36d5940ac51e62a724da975bfc864779abc0467de644334060213569fd02'
  jpa:
    hibernate:
      ddl-auto: validate
  cloud:
    loadbalancer:
      ribbon:
        enabled: fasle
  main:
    allow-bean-definition-overriding: true
#  rabbitmq:
#    host: rabbitmq-service
#    port: 5672
#    username: rabbitmq-user
#    password: '{cipher}00c143e772cb49e03cef267ec4da54871c921726ab7a7b07b556048c36547d22a4444b36b4af4e66a07bb563eda5d44c'
logging:
  level:
    com:
      scorpius:
        authservice: debug

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka/

server:
  forward-headers-strategy: framework

keycloak:
  realm: scorpius
  auth-server-url: http://keycloak:8089
  ssl-required: external
  resource: frontend
  credentials:
    secret: 18XA1OLu6i9Tl1DDrgagVxu6vLVlmFxB
  use-resource-role-mappings: true
  bearer-only: true